user nginx;
# set auto in production
worker_processes 1;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging 
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main buffer=32k flush=1m;
    
    # Performance 
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    
    # Buffers
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
 

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL Session Settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;


    # Resolver for OCSP stapling
    resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
    resolver_timeout 5s;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/bmp
        image/svg+xml
        text/cache-manifest
        text/calendar
        text/css
        text/javascript
        text/markdown
        text/plain
        text/xml
        text/vcard
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Brotli Compression
    brotli on;
    brotli_comp_level 6;
    brotli_static on;
    brotli_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Proxy Cache Configuration - improves api performance
    proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    proxy_cache_valid any 1m;
    proxy_cache_bypass $http_cache_control;
    proxy_no_cache $http_cache_control;


    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=static:10m rate=100r/s;

    # Connection limits per IP and server
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Request limits by user agent
    map $http_user_agent $limit_bots {
        default 0;
        ~*(bot|crawler|spider|scraper) 1;
    }
    limit_req_zone $limit_bots zone=bots:10m rate=2r/s;

    # Define request limit status
    limit_req_status 429;
    limit_conn_status 429;

    # DDOS-PROTECTION
    geo $whitelist {
        default 0;
        127.0.0.1 1;
        10.0.0.0/8 1;
        172.16.0.0/12 1;
        192.168.0.0/16 1;
    }

    map $request_uri $blocked_uri {
        default 0;
        ~*\.(php|asp|aspx|jsp|cgi) 1;
        ~*/(wp-admin|wp-login|xmlrpc) 1;
        ~*/\.(git|svn|htaccess|env) 1;
        ~*\.\./\.\. 1;
    }

    map $http_user_agent $blocked_agent {
        default 0;
        ~*Googlebot 0;
        ~*Bingbot 0;
        ~*^$ 1;
        ~*(curl|wget|python|scrapy|nikto|sqlmap) 1;
        ~*(bot|crawler|spider)$ 1;
    }

    map $request_method $blocked_method {
        default 0;
        ~*(TRACE|TRACK|OPTIONS|CONNECT) 1;
    }

    map $http_referer $blocked_referer {
        default 0;
        ~*(poker|casino|porn|sex|bet) 1;
    }
    # Request Filtering Configuration
    # Maximum request header size check
    map $http_cookie $blocked_cookie {
        default 0;
        "~^.{1024,}$" 1;
    }

    # SQL Injection patterns
    map $args $blocked_sql {
        default 0;
        ~*(union|select|insert|drop|update|delete|exec|script) 1;
        ~*(benchmark|sleep|waitfor) 1;
    }

    # XSS patterns
    map $args $blocked_xss {
        default 0;
        ~*(<script|javascript:|onerror=|onload=) 1;
        ~*(document\.|window\.|alert\(|eval\() 1;
    }

    # Path traversal patterns
    map $uri $blocked_traversal {
        default 0;
        ~*(\.\./|\.\.\\|%2e%2e) 1;
    }

    # Hide NGINX version 
    server_tokens off;

    # API Gateway Upstream 
    upstream api_gateway {
        least_conn;
        server api-gateway:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # HTTP â†’ HTTPS redirect - first visit
    server {
        listen 80;
        listen [::]:80;
        server_name ${DOMAIN} www.${DOMAIN};

        # ACME Challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }        
        # Redirect all https
        location / {
            return 301 https://$server_name$request_uri;
        }    }

    # HTTPS server
    server {
        listen 443 ssl;
         listen [::]:443 ssl;
        server_name ${DOMAIN} www.${DOMAIN};

        # SSL Certificates - Dynamic based on environment
        # Production: Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

        # Development: Self-signed
        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        # SSL Stapling (real certificates)
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN}/chain.pem;

        # DH Parameters
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;
        # Angular app root
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Combined blocking rule
        set $block_request 0;
        if ($blocked_uri) { set $block_request 1; }
        if ($blocked_agent) { set $block_request 1; }
        if ($blocked_method) { set $block_request 1; }
        if ($blocked_referer) { set $block_request 1; }
        if ($blocked_cookie) { set $block_request 1; }
        if ($blocked_sql) { set $block_request 1; }
        if ($blocked_xss) { set $block_request 1; }
        if ($blocked_traversal) { set $block_request 1; }

        # Global rate & connection limits
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 100;
        limit_conn perserver 200;  # max concurrent per server_name

        # API Gateway Proxy
        location /api {
            internal;
            limit_req zone=api burst=50 nodelay;
            limit_conn addr 30;
            # rewrite ^/api/(.*) /$1 break;

            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Request-ID $request_id;
             # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Error handling
            proxy_intercept_errors on;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # Auth endpoints with stricter rate limits
      location ~ ^/api/(login|register|password-reset) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
         # WebSocket support
        location /ws {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Health check
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Consul health check proxy
        location /consul/health {
            proxy_pass http://consul:8500/v1/health/node/consul;
            access_log off;
        }


        # Static assets - cached with rate limiting
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=100 nodelay;

            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;

        }


        # Angular SPA - all routes fallback to index.html
        location / {
            try_files $uri $uri/ /index.html;
        }
      
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|git|gitignore|lock|log|yml|yaml|toml|ini|conf|config)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}