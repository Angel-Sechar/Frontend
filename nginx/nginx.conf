    user nginx;
    worker_processes 1;
    worker_rlimit_nofile 65535;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        # Basic Settings
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Cloudflare Real IP Configuration
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 104.16.0.0/13;
        set_real_ip_from 104.24.0.0/14;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 131.0.72.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        real_ip_header CF-Connecting-IP;

        # Logging (with CF info)
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_cf_connecting_ip" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'cf_ray="$http_cf_ray" cf_country="$http_cf_ipcountry"';

        access_log /var/log/nginx/access.log main buffer=32k flush=1m;

        # Performance 
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        # Buffers
        client_max_body_size 10m;
        client_body_buffer_size 128k;
        
        # Light compression
        gzip on;
        gzip_types text/plain application/json application/javascript text/css;
        gzip_min_length 1000;

        # Simple rate limiting
        limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
        limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

        # Hide version
        server_tokens off;

        # API Gateway Upstream
        upstream api_gateway {
            least_conn;
            server api-gateway:8081 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        # HTTP â†’ HTTPS redirect
        server {
            listen 80;
            listen [::]:80;
            server_name angeljsv.com www.angeljsv.com;

            # Angular app root
            root /usr/share/nginx/html;
            index index.html;

            # Basic security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;


            # Basic rate limiting
            limit_req zone=general burst=50 nodelay;

            # API Gateway Proxy
            location /api {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://api_gateway;
                proxy_http_version 1.1;
                
                # Headers
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }

            # Auth endpoints with stricter limits
            location ~ ^/api/(login|register|password-reset) {
                limit_req zone=auth burst=5 nodelay;
                
                proxy_pass http://api_gateway;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # WebSocket support
            location /ws {
                proxy_pass http://api_gateway;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # Static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }

            # Angular SPA fallback 
            location / {
                try_files $uri $uri/ /index.html;
            }

            # Block dotfiles
            location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
            }
        }
    }