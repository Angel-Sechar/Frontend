user nginx;
worker_processes auto; 
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Cloudflare Real IP Configuration
    include /etc/nginx/cloudflare/trusted-ips.conf;
    real_ip_header CF-Connecting-IP;

    # Logging (with CF info)
   log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_cf_connecting_ip" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cf_ray="$http_cf_ray" cf_country="$http_cf_ipcountry"';

    access_log /var/log/nginx/access.log main buffer=32k flush=1m;

    # Performance 
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # Buffers
    client_max_body_size 10m;
    client_body_buffer_size 128k;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_prefer_server_ciphers off;
    
    # DH Parameters
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Light compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;
    gzip_min_length 1000;

    # Simple rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

    # Hide version
    server_tokens off;

    # API Gateway Upstrea
    upstream api_gateway {
        least_conn;
        server api-gateway:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP â†’ HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name angeljsv.com www.angeljsv.com;

        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name angeljsv.com www.angeljsv.com;

        # SSL Certificates 
        ssl_certificate /etc/letsencrypt/live/angeljsv.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/angeljsv.com/privkey.pem;

        # Angular app root
        root /usr/share/nginx/html;
        index index.html;

        # Basic security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Basic rate limiting
        limit_req zone=general burst=50 nodelay;

        # API Gateway Proxy (ESSENTIAL)
        location /api {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Auth endpoints with stricter limits
        location ~ ^/api/(login|register|password-reset) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # WebSocket support
        location /ws {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Angular SPA fallback 
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Block dotfiles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}