    user nginx;
    worker_processes 1;
    worker_rlimit_nofile 65535;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        # Basic Settings
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Cloudflare Real IP Configuration
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 104.16.0.0/13;
        set_real_ip_from 104.24.0.0/14;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 131.0.72.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        real_ip_header CF-Connecting-IP;

        # Logging (with CF info)
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_cf_connecting_ip" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'cf_ray="$http_cf_ray" cf_country="$http_cf_ipcountry"';

        access_log /var/log/nginx/access.log main buffer=32k flush=1m;

        # Performance 
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        # Hide version
        server_tokens off;
        
        # Buffers
        client_max_body_size 10m;
        client_body_buffer_size 128k;
        
        # Light compression
        gzip on;
        gzip_types text/plain application/json application/javascript text/css;
        gzip_min_length 1000;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
        limit_req_zone $binary_remote_addr zone=api:10m rate=50r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
        
        # Connection limiting
        limit_conn_zone $binary_remote_addr zone=addr:10m;
        limit_conn addr 100;

        # Define request limit status
        limit_req_status 429;
        limit_conn_status 429;
        # error_page 429 /429.html; for future custom page

        map $request_uri $blocked_uri {
            default 0;
            ~*\.(php|asp|aspx|jsp|cgi) 1;
            ~*/(wp-admin|wp-login|xmlrpc) 1;
            ~*/\.(git|svn|htaccess|env) 1;
            ~*\.\./\.\. 1;
        }

        map $http_user_agent $blocked_agent {
            default 0;
            ~*Googlebot 0;
            ~*Bingbot 0;
            ~*^$ 1;
            ~*(curl|wget|python|scrapy|nikto|sqlmap) 1;
            ~*(bot|crawler|spider)$ 1;
        }

        map $request_method $blocked_method {
            default 0;
            ~*(TRACE|TRACK|OPTIONS|CONNECT) 1;
        }

        map $http_referer $blocked_referer {
            default 0;
            ~*(poker|casino|porn|sex|bet) 1;
        }

        # Maximum request header size check
        map $http_cookie $blocked_cookie {
            default 0;
            "~^.{1024,}$" 1;
        }

        # SQL Injection patterns
        map $args $blocked_sql {
            default 0;
            ~*(union|select|insert|drop|update|delete|exec|script) 1;
            ~*(benchmark|sleep|waitfor) 1;
        }

        # XSS patterns
        map $args $blocked_xss {
            default 0;
            ~*(<script|javascript:|onerror=|onload=) 1;
            ~*(document\.|window\.|alert\(|eval\() 1;
        }

        # Path traversal patterns
        map $uri $blocked_traversal {
            default 0;
            ~*(\.\./|\.\.\\|%2e%2e) 1;
        }

        # Log format for blocked requests
        log_format blocked '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status '
                   '"$http_referer" "$http_user_agent" '
                   'blocked_uri=$blocked_uri '
                   'blocked_agent=$blocked_agent '
                   'blocked_method=$blocked_method '
                   'blocked_sql=$blocked_sql '
                   'blocked_xss=$blocked_xss '
                   'blocked_traversal=$blocked_traversal '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'cf_ray="$http_cf_ray" cf_country="$http_cf_ipcountry"';

        # Log only blocked requests
        access_log /var/log/nginx/blocked.log blocked if=$block_request;
        
        # API Gateway Upstream
        upstream api_gateway {
            least_conn;
            server api-gateway:8081 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        # HTTP Server
        server {
            listen 80;
            listen [::]:80;
            server_name angeljsv.com www.angeljsv.com;

            # Combined blocking rule
            set $block_request 0;
            if ($blocked_uri) {
                set $block_request 1; 
            }
            if ($blocked_agent) { 
                set $block_request 1; 
            }
            if ($blocked_method) { 
                set $block_request 1; 
            }
            if ($blocked_referer) { 
                set $block_request 1; 
            }
            if ($blocked_cookie) { 
                set $block_request 1; 
            }
            if ($blocked_sql) { 
                set $block_request 1; 
            }
            if ($blocked_xss) { 
                set $block_request 1; 
            }
            if ($blocked_traversal) { 
                set $block_request 1; 
            }

            if ($block_request) {
                return 403;
            }

            # Angular app root
            root /usr/share/nginx/html;
            index index.html;

            # Basic security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;

            # Basic rate limiting
            limit_req zone=general burst=50 nodelay;

            # API Gateway Proxy
            location /api {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://api_gateway;
                proxy_http_version 1.1;
                
                # Headers
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }

            # Auth endpoints with stricter limits
            location ~ ^/api/(login|register|password-reset) {
                limit_req zone=auth burst=5 nodelay;
                
                proxy_pass http://api_gateway;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # WebSocket support
            location /ws {
                proxy_pass http://api_gateway;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            # Static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }

            # Angular SPA fallback 
            location / {
                try_files $uri $uri/ /index.html;
            }

            # Block dotfiles
            location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
            }
        }
    }